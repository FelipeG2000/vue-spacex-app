name: Deploy Frontend to ECS

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Build and Deploy Vue App to ECS
    runs-on: ubuntu-latest
    environment: Production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.REGION }}
    
    - name: Get API URL from CloudFormation Output
      id: get-api-url
      run: |
          URL=$(aws cloudformation describe-stacks \
            --stack-name ${{ vars.STACK_NAME }} \
            --query "Stacks[0].Outputs[?OutputKey=='SpaceXLaunchesApiEndpoint'].OutputValue" \
            --output text)
          echo "API_URL=$URL" >> $GITHUB_ENV
    
    - name: Create .env.production with API URL
      run: |
          echo "VITE_API_URL=${{ env.API_URL }}" > .env.production
    
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ vars.REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.REGION }}.amazonaws.com

    - name: Build Docker Image
      run: |
        docker build -t ${{ vars.ECR_REPO }} .

    - name: Tag Docker Image
      run: |
        docker tag ${{ vars.ECR_REPO }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.REGION }}.amazonaws.com/${{ vars.ECR_REPO }}:latest

    - name: Push Docker Image to ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.REGION }}.amazonaws.com/${{ vars.ECR_REPO }}:latest

    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster ${{ vars.ECS_CLUSTER }} \
          --service ${{ vars.ECS_SERVICE }} \
          --force-new-deployment \
          --region ${{ vars.REGION }}
